version: '3.7'

networks:
  app:
    driver: bridge

services:

  messenger_service:
    container_name: messenger_service
    build: ./messenger-service
    command: gunicorn app.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    volumes:
      - ./messenger-service/:/app/
    ports:
      - "8001:8000"
    env_file:
      - ./.env
    environment:
      - AUTH_SERVICE_HOST_URL=http://auth_service:8000/api/v1/auth/
      - SENDER_SERVICE_HOST_URL=http://sender_service:8000/api/v1/sender/
      - KAFKA_HOST_URL=http://kafka:29092
    depends_on:
      - db
    networks:
      - app

  auth_service:
    container_name: auth_service
    build: ./auth-service
    command: gunicorn app.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    volumes:
      - ./auth-service/:/app/
    ports:
      - "8002:8000"
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - app

  sender_service:
    container_name: sender_service
    build: ./sender-service
    command: gunicorn app.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    volumes:
      - ./sender-service/:/app/
    ports:
      - "8003:8000"
    env_file:
      - ./.env
    environment:
      - AUTH_SERVICE_HOST_URL=http://auth_service:8000/api/v1/auth/
      - KAFKA_HOST_URL=http://kafka:29092
    depends_on:
      - db
    networks:
      - app

  db:
    container_name: db
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - ${DB_PORT}:5432
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_TITLE}
      - POSTGRES_HOST=${DB_HOST}
    networks:
      - app

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "22181:2181"
    environment:
     - ZOOKEEPER_CLIENT_PORT=2181
     - ZOOKEEPER_TICK_TIME=2000
    networks:
      - app

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    networks:
      - app

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx_config.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - auth_service
      - messenger_service
      - sender_service
    networks:
      - app

volumes:
  postgres_data:
