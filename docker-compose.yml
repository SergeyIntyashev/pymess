version: '3.7'

networks:
  app:
    driver: bridge

services:

  messenger_service:
    container_name: messenger_service
    build: ./messenger-service
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./messenger-service/:/app/
    ports:
      - "8001:8000"
    env_file:
      - ./.env
    environment:
      - AUTH_SERVICE_HOST_URL=http://auth_service:8000/api/v1/auth/
      - SENDER_SERVICE_HOST_URL=http://sender_service:8000/api/v1/sender/
    depends_on:
      - db
    networks:
      - app

  auth_service:
    container_name: auth_service
    build: ./auth-service
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./auth-service/:/app/
    ports:
      - "8002:8000"
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - app

  sender_service:
    container_name: sender_service
    build: ./sender-service
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./sender-service/:/app/
    ports:
      - "8003:8000"
    env_file:
      - ./.env
    environment:
      - AUTH_SERVICE_HOST_URL=http://auth_service:8000/api/v1/auth/
      - MESSENGER_SERVICE_HOST_URL=http://messenger_service:8000/api/v1/messenger/
    depends_on:
      - db
    networks:
      - app

  db:
    container_name: db
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - ${DB_PORT}:5432
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_TITLE}
      - POSTGRES_HOST=${DB_HOST}
    networks:
      - app

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    networks:
      - app

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - "9093:9093"
    expose:
      - "9093"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS="kafka_capstone_event_bus:1:1"
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - app

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx_config.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - auth_service
      - messenger_service
      - sender_service
    networks:
      - app

volumes:
  postgres_data:
  zookeeper_data:
  kafka_data:
